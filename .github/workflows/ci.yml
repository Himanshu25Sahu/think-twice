name: CI

on:
  push:
    branches:
      - main
      - devops-ci
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout Repo
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Step 3: Cache Server Node Modules
      - name: Cache Server Node Modules
        uses: actions/cache@v3
        with:
          path: server/node_modules
          key: ${{ runner.os }}-node-server-${{ hashFiles('server/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-server-

      # Step 4: Install Server dependencies
      - name: Install Server Dependencies
        run: npm ci
        working-directory: ./server

      # Step 5: Build Server Docker image
      - name: Build Server Docker Image
        run: docker build -t jd-server ./server

      # Step 6: Push Server Image to Docker Hub (only for main branch)
      - name: Log in to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Server Image to Docker Hub
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag jd-server ${{ secrets.DOCKER_USERNAME }}/jd-server:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/jd-server:latest

      # Step 7: Trigger Render Deploy (Backend)
      - name: Trigger Render Deploy
        if: github.ref == 'refs/heads/main'
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }} -f
